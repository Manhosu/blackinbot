import { createClient } from '@supabase/supabase-js';
// Remova o tipo Database se n√£o existir em web/src/types/supabase

// URLs do Supabase - usar vari√°veis de ambiente
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || '';
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '';

// Valida√ß√£o ser√° feita no primeiro uso, n√£o na inicializa√ß√£o
function validateSupabaseConfig() {
  if (!supabaseUrl || !supabaseAnonKey) {
    throw new Error('‚ùå Vari√°veis de ambiente do Supabase n√£o configuradas! Configure NEXT_PUBLIC_SUPABASE_URL e NEXT_PUBLIC_SUPABASE_ANON_KEY');
  }
}

console.log('üîß Configura√ß√£o Supabase:');
console.log('üìç URL:', supabaseUrl);
console.log('üîë Anon Key configurada:', supabaseAnonKey ? 'Sim' : 'N√£o');

// Cliente Supabase configurado - com fallback para build
export const supabase = createClient(
  supabaseUrl || 'https://placeholder.supabase.co', 
  supabaseAnonKey || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBsYWNlaG9sZGVyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDUxOTI4MDAsImV4cCI6MTk2MDc2ODgwMH0.placeholder', 
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true
    }
  }
);

// Exporta√ß√£o padr√£o para compatibilidade
export default supabase; 